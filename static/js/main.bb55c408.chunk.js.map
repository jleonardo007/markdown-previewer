{"version":3,"sources":["App.jsx","index.js"],"names":["marked","setOptions","breaks","renderer","Renderer","link","href","title","text","Editor","props","id","value","markdown","onChange","textInput","Preview","dangerouslySetInnerHTML","__html","MarkdownApp","handleChange","e","setState","target","state","placeholder","className","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oSAIAA,IAAOC,WAAW,CAChBC,QAAQ,IAIV,IAAMC,EAAW,IAAIH,IAAOI,SAC5BD,EAASE,KAAO,SAAUC,EAAMC,EAAOC,GACrC,MAAO,mCAA4BF,EAA5B,aAAqCE,GAAS,QAGvD,IAAMC,EAAS,SAACC,GAAD,OACb,8BACEC,GAAK,SACLC,MAASF,EAAMG,SACfC,SAAYJ,EAAMK,aAIhBC,EAAU,SAACN,GAAD,OACd,6BACEC,GAAG,UAAUM,wBAAyB,CAACC,OAAQlB,IAAOU,EAAMG,SAAU,CAAEV,SAAUA,QAIhFgB,E,YACJ,WAAYT,GAAO,IAAD,8BAChB,4CAAMA,KAMRU,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZT,SAAUQ,EAAEE,OAAOX,SAPrB,EAAKY,MAAQ,CACXX,SAAUY,GAHI,E,sEAchB,OACE,yBAAKC,UAAU,aACb,kBAAC,EAAD,CACEb,SAAYc,KAAKH,MAAMX,SACvBE,UAAaY,KAAKP,eAEpB,kBAAC,EAAD,CACEP,SAAYc,KAAKH,MAAMX,gB,GAtBPe,IAAMC,WAgC1BJ,EAAW,8qCAgDFN,ICtGfW,IAASC,OAAO,kBAAC,EAAD,MAAiBC,SAASC,eAAe,W","file":"static/js/main.bb55c408.chunk.js","sourcesContent":["import React from 'react';\nimport marked from 'marked'\n\n// ALLOWS LINE BREAKS WITH RETURN BUTTON\nmarked.setOptions({\n  breaks: true,\n});\n\n// INSERTS target=\"_blank\" INTO HREF TAGS (required for codepen links)\nconst renderer = new marked.Renderer();\nrenderer.link = function (href, title, text) {\n  return `<a target=\"_blank\" href=\"${href}\">${text}` + '</a>';\n}\n\nconst Editor = (props) =>(\n  <textarea \n    id = \"editor\" \n    value = {props.markdown}\n    onChange = {props.textInput}\n   />\n)\n\nconst Preview = (props) =>(\n  <section \n    id=\"preview\" dangerouslySetInnerHTML={{__html: marked(props.markdown, { renderer: renderer })}}>\n  </section>\n)\n\nclass MarkdownApp extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      markdown: placeholder\n    }\n  }\n  \n  handleChange = e =>{\n    this.setState({\n      markdown: e.target.value\n    })\n  }\n  \n  render(){\n    return(\n      <div className=\"container\">\n        <Editor\n          markdown = {this.state.markdown}\n          textInput = {this.handleChange}\n         />\n        <Preview\n          markdown = {this.state.markdown} \n         />\n      </div>\n    )\n  }\n}\n\n\n\n//Placeholder\nconst placeholder = \n`# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n\nexport default MarkdownApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MarkdownApp from './App';\n\n\nReactDOM.render(<MarkdownApp />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}